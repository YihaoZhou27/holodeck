name: CI with tox pytest

on:
  push:
    branches:
      - "main"
      - "dev"
  pull_request:
    branches:
      - "main"
      - "dev"

  #schedule:
    # Nightly tests run on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
  #  - cron: "0 0 * * *"

jobs:
  test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] #[macOS-latest, windows-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements-dev.txt
        python --version
        which python

    - name: Install package
      run: |
        python -m pip install . --no-deps
        python --version
        python -c "import sys; print(f'Python {sys.version}')"
        python -c "import pip; print(f'pip {pip.__version__}')"
        python -c "import setuptools; print(f'setuptools {setuptools.__version__}')"
        python -m pip freeze

    - name: Run tox
      # Run tox using the version of Python in `PATH`
      run: tox -e py

    - name: lint with flake8 on py39
        if:  ${{ !startsWith(matrix.python-version, '3.9') }}
        run: tox -e flake8

    # - name: Run tests
    #   run: |
    #      python ./convert_notebook_tests.py
    #      bash ./scripts/tester.sh -b -v

    # - name: CodeCov
    #   uses: codecov/codecov-action@v1
    #   with:
    #     file: ./coverage.xml
    #     flags: unittests
    #     name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}

    # - name: Run tests and collect coverage
    #       run: pytest --cov .
    #     - name: Upload coverage reports to Codecov
    #       run: |
    #         # Replace `linux` below with the appropriate OS
    #         # Options are `alpine`, `linux`, `macos`, `windows`
    #         curl -Os https://uploader.codecov.io/latest/linux/codecov
    #         chmod +x codecov
    #         ./codecov -t ${CODECOV_TOKEN}